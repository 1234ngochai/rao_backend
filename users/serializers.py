from rest_framework import serializers
from django.contrib.auth import get_user_model

User = get_user_model()

class UserSerializer (serializers.ModelSerializer):

    # this varialbe server as a rules for the input data comming from the user
    # throught the servilizer, validating the password as string and ensure that
    # it is only write able to the database, not visable when responded to the user
    password = serializers.CharField(write_only = True)

    #this Meta clase frist of define the model for this serializer which is User
    # defined the field that this serializer will accept     
    class Meta:
        model = User
        # id, username will be sent to the user
        # id is default autogenerated field in serializer handled by the parent class
        # password will be recived but not return to the user
        # convert this into a dictionary of field and value
        fields = ('id', 'username', 'password')

    # create method will be called upon save the servilizer, this will triggure and actually
    # save into the database by the create user method.
    def create (self, validated_data):
        user = User.objects.create_user (
            username= validated_data['username'],
            password= validated_data['password']
        )
        print(user)
        return user
        